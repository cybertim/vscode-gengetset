{
    "name": "vscode-generate-getter-setter",
    "displayName": "TypeScript Toolbox",
    "description": "Add and Optimize Imports, Generate Getters / Setters and Constructors",
    "version": "0.5.0",
    "publisher": "DSKWRK",
    "icon": "icon.png",
    "galleryBanner": {
        "color": "#d4d3d3",
        "theme": "dark"
    },
    "capabilities": {
        "codeActionProvider": "true"
    },
    "engines": {
        "vscode": "^1.1.1"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/cybertim/vscode-gengetset.git"
    },
    "homepage": "https://github.com/cybertim/vscode-gengetset",
    "bugs": {
        "url": "https://github.com/cybertim/vscode-gengetset/issues"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onCommand:genGetSet.getter",
        "onCommand:genGetSet.setter",
        "onCommand:genGetSet.getterAndSetter",
        "onCommand:genGetSet.constructor",
        "onCommand:genGetSet.popup",
        "onCommand:genGetSet.addImport",
        "onCommand:genGetSet.sortImports",
        "onCommand:genGetSet.scanImports",
        "onLanguage:typescript"
    ],
    "main": "./out/src/extension",
    "contributes": {
        "keybindings": [{
            "command": "genGetSet.popup",
            "key": "alt+shift+g",
            "when": "editorTextFocus"
        }],
        "commands": [{
                "command": "genGetSet.getter",
                "title": "TypeScript: Generate Getter"
            },
            {
                "command": "genGetSet.setter",
                "title": "TypeScript: Generate Setter"
            },
            {
                "command": "genGetSet.getterAndSetter",
                "title": "TypeScript: Generate Getter and Setter"
            },
            {
                "command": "genGetSet.allGetterAndSetter",
                "title": "TypeScript: Generate ALL Getter and Setter"
            },
            {
                "command": "genGetSet.constructor",
                "title": "TypeScript: Generate Constructor"
            },
            {
                "command": "genGetSet.sortImports",
                "title": "TypeScript: Optimize Imports"
            },
            {
                "command": "genGetSet.addImport",
                "title": "TypeScript: Add Import"
            },
            {
                "command": "genGetSet.scanImport",
                "title": "TypeScript: (Re)Scan Exports"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Generate Getter and Setter configuration",
            "properties": {
                "genGetSet.importTypings": {
                    "type": "boolean",
                    "default": true,
                    "description": "Create import lines based on definition files from /typings/."
                },
                "genGetSet.importNode": {
                    "type": "boolean",
                    "default": true,
                    "description": "Create import lines based on definition files from /node_modules/."
                },
                "genGetSet.scoped": {
                    "type": "boolean",
                    "default": true,
                    "description": "Only show private variables from current class based on cursor position."
                },
                "genGetSet.filter": {
                    "type": "boolean",
                    "default": true,
                    "description": "Only show private variables which do not have a getter/setter method."
                },
                "genGetSet.classic": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use 'getValue' and 'setValue' instead of 'get value' and 'set value'."
                },
                "genGetSet.pathStringDelimiter": {
                    "type": "string",
                    "default": "'",
                    "description": "Sets which quote use to generate import path."
                },
                "genGetSet.spacedImportLine": {
                    "type": "boolean",
                    "default": false,
                    "description": "Adds spaces between the beginning and ending of the brackets in an import line."
                },
                "genGetSet.scanOnSave": {
                    "type": "boolean",
                    "default": false,
                    "description": "Index all exports in the workspace when a change is saved."
                },
                "genGetSet.ignoredLibraryPaths": {
                    "type": "array",
                    "default": [
                        "src",
                        "dist"
                    ],
                    "description": "An array of paths to ignore when building import rules."
                },
                "genGetSet.ignoredNodeLibraries": {
                    "type": "array",
                    "default": [
                        "node",
                        "chrome"
                    ],
                    "description": "An array of node-libraries to ignore when running auto-import."
                },
                "genGetSet.ignoredDictionaryList": {
                    "type": "array",
                    "default": [
                        "vscode",
                        "tsconfig"
                    ],
                    "description": "An array of dictionary exports to ignore when running auto-import."
                },
                "genGetSet.ignoredImportList": {
                    "type": "array",
                    "default": [
                        "Promise"
                    ],
                    "description": "An array of imports to ignore when running auto-import."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "node ./node_modules/vscode/bin/compile",
        "compile": "node ./node_modules/vscode/bin/compile -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "node ./node_modules/vscode/bin/test",
        "publish": "vsce publish"
    },
    "devDependencies": {
        "typescript": "^1.8.10",
        "vsce": "^1.37.6",
        "vscode": "^1.1.37"
    },
    "dependencies": {}
}